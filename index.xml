<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jing Blog</title>
    <link>https://shanyit.github.io/</link>
    <description>Recent content on Jing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 02 Jan 2020 19:26:50 +0800</lastBuildDate>
    
	<atom:link href="https://shanyit.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Use github for image hosting service</title>
      <link>https://shanyit.github.io/post/2020-01-02-imagehostingservice/</link>
      <pubDate>Thu, 02 Jan 2020 19:26:50 +0800</pubDate>
      
      <guid>https://shanyit.github.io/post/2020-01-02-imagehostingservice/</guid>
      <description>When we write something with Markdown, we frequently need to inset images to Markdown files with ![xxx](url) or ![xxx](relative path of a picture). I recommand to use ![xxx](url) to add images due to changes of image paths when we migrate Blogs.For the first one, image url does not ofen change. Github can provide us to use repositories to store our images for free. So I introduce two methods to use</description>
    </item>
    
    <item>
      <title>Gradient Checkpointing Horovod</title>
      <link>https://shanyit.github.io/post/2019-12-01-distributedtraining/</link>
      <pubDate>Thu, 02 Jan 2020 11:29:54 +0800</pubDate>
      
      <guid>https://shanyit.github.io/post/2019-12-01-distributedtraining/</guid>
      <description>GradientCheckpointingHorovod Introduction Bert, Roberta, and Xlnet models are too large to be trained. They are often partioned on several GPUs (one defines this as Model Parallelism). Actually, layers are dependent which means current layer needs the ouput of preceding layer to continue some calculation. Assuming a large model is splitted into 4 parts each on a single GPU, other parts are waitting for others when one of part is runing some computation.</description>
    </item>
    
    <item>
      <title>寻找重复地震</title>
      <link>https://shanyit.github.io/post/2017-08-15-findearth/</link>
      <pubDate>Tue, 15 Aug 2017 21:09:12 +0000</pubDate>
      
      <guid>https://shanyit.github.io/post/2017-08-15-findearth/</guid>
      <description>在求取速度变化，应力降，衰减因子变化等都用到了重复地震。所以寻找重复地震以及对重复地震进行聚类分析是重点。这里我不详细讲述原理，详见文章;在</description>
    </item>
    
    <item>
      <title></title>
      <link>https://shanyit.github.io/search/placeholder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shanyit.github.io/search/placeholder/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://shanyit.github.io/top/about_zhaohuabing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shanyit.github.io/top/about_zhaohuabing/</guid>
      <description>Huabing Zhao is an ICT veteran with a passion for open source. He has a solid experience in the telecommunication and information technology industry for more than 17 years.
Throughout his career, he has built a number of large-scale, cross-country OSS/BSS platforms/systems and operation tools, most of them are still running in productions.
He loves open source and has been contributing to a variety of open source projects, including Istio(Service Mesh https://istio.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://shanyit.github.io/top/books_zhaohuabing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shanyit.github.io/top/books_zhaohuabing/</guid>
      <description>Machine learning学习笔记 Coursera 在线课程 Machine learning 笔记 讲师: 吴恩达(Andrew Ng)  课程地址：https://www.coursera.org/learn/machine-learning</description>
    </item>
    
  </channel>
</rss>